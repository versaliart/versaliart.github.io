/* ===== Topflip v1.31 "split-doors" appearance (no JS/markup changes) ===== */
:root{
  --flip-duration: .6s;                       /* match example speed */
  --flip-ease: cubic-bezier(.2,.7,.2,1);      /* match example feel */
  --flip-perspective: 62.5rem;                /* ~1000px */
  --door-bg: rgba(0,0,0,.08);                 /* subtle front panel look; tweak or set to transparent */
  --door-radius: .5rem;                       /* optional rounding */
  --door-shadow: 0 .75rem 1.5rem rgba(0,0,0,.18), 0 .5rem .75rem rgba(0,0,0,.12);
}

/* Put perspective on a safe ancestor (your section wrapper is ideal) */
.flip-section, body{
  perspective: var(--flip-perspective);
}

/* Your Squarespace image block that your script already targets */
#flip-top{
  position: relative;               /* anchor pseudo-doors */
  display: inline-block;            /* avoid collapsing into a sliver */
  overflow: hidden;                 /* keep doors clipped to the image bounds */
  transform-style: preserve-3d;     /* for crisp 3D on children */
}

/* Ensure the image itself is clean and doesn't "ghost" from the back side */
#flip-top img{
  display: block;
  width: 100%;
  height: auto;
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
}

/* --------------------------------------------
   FRONT "DOORS" — purely visual, sit ABOVE the image
   They flip away in opposite directions to reveal the image.
--------------------------------------------- */
#flip-top::before,
#flip-top::after{
  content: "";
  position: absolute;
  top: 0; bottom: 0;
  width: 50%;                       /* left/right halves */
  pointer-events: none;             /* don't block clicks to underlying content */
  background: var(--door-bg);       /* appearance of the front face */
  border-radius: var(--door-radius);
  box-shadow: var(--door-shadow);
  transform-style: preserve-3d;
  backface-visibility: hidden;
  transition: transform var(--flip-duration) var(--flip-ease),
              opacity var(--flip-duration) var(--flip-ease);
  will-change: transform;
  z-index: 2;                       /* above the image */
}

/* Left door (hinges on its left edge) */
#flip-top::before{
  left: 0;
  transform-origin: left center;
  transform: rotateY(0deg) translateZ(1px);
}

/* Right door (hinges on its right edge) */
#flip-top::after{
  right: 0;
  transform-origin: right center;
  transform: rotateY(0deg) translateZ(1px);
}

/* --------------------------------------------
   KEEP YOUR EXISTING TRIGGERS.
   We *stop* the old whole-card flip (if present),
   and instead flip only the doors.
   Supported flags: .is-flipped, .flipped, .flip-right, .flip-left
--------------------------------------------- */

/* If your old CSS rotates the whole card on these classes, neutralize it */
#flip-top.is-flipped,
#flip-top.flipped,
#flip-top.flip-right,
#flip-top.flip-left{
  transform: none !important;   /* prevent the entire block from rotating */
}

/* Default/rightward intent: doors open away from viewer */
#flip-top.is-flipped::before,
#flip-top.flipped::before,
#flip-top.flip-right::before{
  transform: rotateY(-180deg) translateZ(1px);
}

#flip-top.is-flipped::after,
#flip-top.flipped::after,
#flip-top.flip-right::after{
  transform: rotateY(180deg) translateZ(1px);
}

/* If your script uses a "left" variant, we keep symmetry (same visual result) */
#flip-top.flip-left::before{  transform: rotateY(-180deg) translateZ(1px); }
#flip-top.flip-left::after{   transform: rotateY(180deg)  translateZ(1px);  }

/* Optional preview on hover (comment out if you don't want it) */
/*
#flip-top:hover::before{ transform: rotateY(-180deg) translateZ(1px); }
#flip-top:hover::after{  transform: rotateY(180deg)  translateZ(1px); }
*/

/* Reduced motion respect */
@media (prefers-reduced-motion: reduce){
  #flip-top::before, #flip-top::after{ transition-duration: .01ms; }
}


<script>
/* ===== Multi-Flip setup for only this section ===== */
(function(){
  function closestSection(el){
    while(el && el!==document.body){
      if(el.matches('.page-section, [data-section-id], section')) return el;
      el = el.parentElement;
    }
    return null;
  }
  function ready(fn){
    if(document.readyState!=='loading') fn();
    else document.addEventListener('DOMContentLoaded', fn, {once:true});
  }

  ready(function(){
    var scriptEl = document.currentScript;
    var section = closestSection(scriptEl);
    if(!section) return;
    section.classList.add('flip-section');

    // Find every Image Block in this section marked as a Top Block
    var blocks = Array.from(section.querySelectorAll('.sqs-block.image-block'))
      .filter(function(blk){ return !!blk.querySelector('a[href="#flip-top"]'); });

    if(!blocks.length){
      console.warn('FlipTop: No Image Blocks with href="#flip-top" in this section.');
      return;
    }

    blocks.forEach(function(block){
      if(block.__flipReady) return; // idempotent
      block.__flipReady = true;
      block.classList.add('flip-top');

      // Build flip DOM: .flip-inner > (.flip-front [original content], .flip-back [empty])
      var inner = document.createElement('div'); inner.className = 'flip-inner';
      var front = document.createElement('div'); front.className = 'flip-front';
      var back  = document.createElement('div'); back.className  = 'flip-back';

      while(block.firstChild){ front.appendChild(block.firstChild); }
      inner.appendChild(front); inner.appendChild(back);
      block.appendChild(inner);

      // Use the marker link as a trigger; never navigate
      var marker = front.querySelector('a[href="#flip-top"]');
      if(marker){
        marker.addEventListener('click', function(e){
          e.preventDefault(); e.stopPropagation();
          if (matchMedia('(hover: none), (pointer: coarse)').matches) {
            block.classList.add('is-flipped'); // mobile tap → flip this block only
          }
        }, true);
      }

      // Also allow tapping anywhere on the Top Block (mobile) to flip
      block.addEventListener('click', function(){
        if (matchMedia('(hover: none), (pointer: coarse)').matches) {
          block.classList.add('is-flipped');
        }
      }, true);

      // Auto-reset when the block scrolls off-screen
      if('IntersectionObserver' in window){
        var io = new IntersectionObserver(function(entries){
          entries.forEach(function(entry){
            if(!entry.isIntersecting){ block.classList.remove('is-flipped'); }
          });
        }, {threshold: 0.05});
        io.observe(block);
      }
    });

    // Mobile convenience: tap blank space in the section to reset all flipped blocks
    section.addEventListener('click', function(e){
      if (!(matchMedia('(hover: none), (pointer: coarse)').matches)) return;
      if (!e.target.closest('a, button, [role="button"]')) {
        section.querySelectorAll('.flip-top.is-flipped').forEach(function(b){
          b.classList.remove('is-flipped');
        });
      }
    });
  });
})();
</script>

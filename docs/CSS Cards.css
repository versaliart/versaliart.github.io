/* tarot-stack.css v1.3 — 80% pile size, expand-to-full on flip, FLIP-friendly */
.tarot-stack{
  /* Motion */
  --flip-ms: 600ms;
  --move-ms: 520ms;
  --shuffle-ms: 700ms;
  --ease: cubic-bezier(.2,.7,.2,1);

  /* These are set by JS based on container size */
  --card-w: 320px;          /* fallback */
  --card-h: 440px;          /* fallback */
  --pile-gap: .14rem;       /* slight stagger */
  --pile-pad: .5rem;
  --pile-radius: .75rem;
  --table-gap: 2rem;

  position: relative;
  width: 100%;
  min-height: 14rem;
  display: grid;
  align-items: center;
  justify-content: center;
}
.tarot-stack[data-compact="true"]{ --table-gap: 1rem; }

.tarot-table{
  display: grid;
  grid-template-columns: 1fr 1fr;
  align-items: center;
  gap: var(--table-gap);
  width: 100%;
  height: 100%;
}

/* Pile “wells” (visual frames) */
.t-pile{
  position: relative;
  width: 100%;
  height: 100%;
  border-radius: var(--pile-radius);
  background: linear-gradient(180deg, rgba(255,255,255,.06), rgba(0,0,0,.06));
  box-shadow: inset 0 0 .25rem rgba(0,0,0,.15);
}

/* Card root: positioned within pile wells (80% sizing handled by JS via vars) */
.t-card{
  position: absolute;
  top: 50%;
  left: 50%;
  width: var(--card-w);
  height: var(--card-h);
  transform-style: preserve-3d;
  transform-origin: center center;
  will-change: transform, width, height;
  border-radius: .6rem;
  user-select: none;
  cursor: pointer;
  transition: transform var(--flip-ms) var(--ease), width var(--move-ms) var(--ease), height var(--move-ms) var(--ease);
  box-shadow: 0 .25rem .7rem rgba(0,0,0,.35);
  translate: -50% -50%; /* center in pile */
}

/* slight fan within piles via an index offset; visual only */
.t-card[data-pile="draw"]  { transform: translate3d(0,0,0) rotateZ(calc(var(--i,0) * .3deg)); }
.t-card[data-pile="discard"]{ transform: translate3d(0,0,0) rotateZ(calc(var(--i,0) * .3deg)); }

.t-card[aria-disabled="true"]{ cursor: default; }
.t-card.is-top{ box-shadow: 0 .6rem 1.2rem rgba(0,0,0,.5); }

/* Faces */
.t-face{
  position: absolute; inset: 0;
  backface-visibility: hidden;
  border-radius: inherit;
  overflow: hidden;
}
.t-back{
  background-size: 102% 102%;
  background-position: center;
  background-repeat: no-repeat;
  background-color: #F7F4EC;
  border: 1px solid #726A53;
}
.t-front{
  transform: rotateY(180deg);
  background: #fff;
  border: 1px solid #c9c4b2;
}
.t-front > .t-content{
  padding: 1rem;
  height: 100%;
  overflow: auto;
  font: 400 0.95rem/1.4 system-ui, -apple-system, Segoe UI, Roboto, "Helvetica Neue", Arial, "Noto Sans";
}

/* Expanded (first click): card fills the whole Code Block area (overlay) */
.t-card.is-expanded{
  position: absolute;
  width: 100%;
  height: 100%;
  left: 50%;
  top: 50%;
  translate: -50% -50%;
  z-index: 999; /* above wells */
}

/* Flip states */
.t-card.is-flipped{ transform: rotateY(180deg); }

/* Shuffle wiggle */
@keyframes pile-shuffle{
  0%{ transform: translateY(0) rotateZ(0); }
  40%{ transform: translateY(-10%) rotateZ(4deg); }
  100%{ transform: translateY(0) rotateZ(0); }
}
.t-card.shuffle{ animation: pile-shuffle var(--shuffle-ms) var(--ease) both; }

/* Reduced motion */
@media (prefers-reduced-motion: reduce){
  .t-card{ transition: none !important; }
  .t-card.shuffle{ animation: none !important; }
}
